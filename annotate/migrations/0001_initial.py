# Generated by Django 2.1.7 on 2019-11-25 17:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnotationSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_element_type', models.BooleanField(default=False)),
                ('custom_frame_type', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.TextField(blank=True, null=True)),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CoreElementType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('definition', models.TextField(blank=True, null=True)),
                ('xml_id', models.IntegerField(blank=True, null=True)),
                ('new_custom_value', models.BooleanField(default=False)),
                ('core_type', models.TextField(default='core')),
            ],
        ),
        migrations.CreateModel(
            name='ExtendedUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_adress', models.CharField(blank=True, max_length=20, null=True)),
                ('browser', models.CharField(blank=True, max_length=200, null=True)),
                ('login_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilterSettingsAnnotated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField()),
                ('count', models.TextField(default='25')),
                ('start', models.IntegerField(default=0)),
                ('end', models.IntegerField(default=25)),
                ('search_verb', models.TextField()),
                ('search_sent_id', models.IntegerField(blank=True, null=True)),
                ('search_frame', models.TextField()),
                ('search_certainty', models.IntegerField(blank=True, null=True)),
                ('search_last_change', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilterSettingsInprogress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField()),
                ('count', models.TextField(default='25')),
                ('start', models.IntegerField(default=0)),
                ('end', models.IntegerField(default=25)),
                ('search_verb', models.TextField()),
                ('search_sent_id', models.IntegerField(blank=True, null=True)),
                ('search_frame', models.TextField()),
                ('search_certainty', models.IntegerField(blank=True, null=True)),
                ('search_last_change', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilterSettingsSkipped',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField()),
                ('count', models.TextField(default='25')),
                ('start', models.IntegerField(default=0)),
                ('end', models.IntegerField(default=25)),
                ('search_verb', models.TextField()),
                ('search_sent_id', models.IntegerField(blank=True, null=True)),
                ('search_frame', models.TextField()),
                ('search_certainty', models.IntegerField(blank=True, null=True)),
                ('search_last_change', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FilterSettingsUnannotated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField()),
                ('count', models.TextField(default='50')),
                ('start', models.IntegerField(default=0)),
                ('end', models.IntegerField(default=50)),
                ('search_verb', models.TextField()),
                ('search_sent_id', models.IntegerField(blank=True, null=True)),
                ('search_frame', models.TextField()),
                ('search_certainty', models.IntegerField(blank=True, null=True)),
                ('search_last_change', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_of_sentence', models.IntegerField()),
                ('position', models.TextField()),
                ('verb_lemma', models.TextField()),
                ('verb_ids', models.TextField()),
                ('f_type', models.TextField()),
                ('user', models.TextField()),
                ('annotated', models.BooleanField()),
                ('comment', models.TextField(blank=True, null=True)),
                ('used_clicks', models.IntegerField(default=0)),
                ('used_time', models.IntegerField(default=0)),
                ('time_spent', models.IntegerField(default=0)),
                ('change_id', models.IntegerField(default=0)),
                ('current_version', models.BooleanField(default=True)),
                ('certainty', models.IntegerField(blank=True, null=True)),
                ('annotation_state', models.IntegerField(default=0)),
                ('verb_addition', models.TextField(default='')),
                ('skipped', models.BooleanField(default=False)),
                ('skip_reason', models.TextField(default='')),
                ('timestamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('description_of_change', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FrameType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('definition', models.TextField(blank=True, null=True)),
                ('xml_id', models.IntegerField(blank=True, null=True)),
                ('new_custom_value', models.BooleanField(default=False)),
                ('core_types', models.ManyToManyField(to='annotate.CoreElementType')),
            ],
        ),
        migrations.CreateModel(
            name='LexicalUnits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.TextField()),
                ('xml_id', models.IntegerField(blank=True, null=True)),
                ('new_custom_value', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='LoggedInUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=32, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='logged_in_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MWE',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.TextField(blank=True, null=True)),
                ('mwe_verb', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SemanticRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('definition', models.TextField(blank=True, null=True)),
                ('new_custom_value', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('sentence_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_of_token', models.IntegerField(blank=True, null=True)),
                ('id_of_mwe', models.IntegerField(blank=True, null=True)),
                ('component_type', models.TextField(blank=True, null=True)),
                ('core_element_type', models.TextField(blank=True, null=True)),
                ('frame_id', models.IntegerField(blank=True, null=True)),
                ('xml_id', models.IntegerField(blank=True, null=True)),
                ('reference_c', models.BooleanField(default=False)),
                ('reference_d', models.BooleanField(default=False)),
                ('reference_r', models.BooleanField(default=False)),
                ('role_label', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Synonyms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('verb', models.TextField()),
                ('synonym', models.TextField()),
                ('xml_ids', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('word_form', models.TextField()),
                ('lemma', models.TextField()),
                ('pos', models.TextField(blank=True, null=True)),
                ('xpos', models.TextField(blank=True, null=True)),
                ('dep_nr', models.IntegerField()),
                ('dep_rel', models.TextField()),
                ('sentence_id', models.TextField()),
            ],
        ),
        migrations.AddField(
            model_name='sentence',
            name='token',
            field=models.ManyToManyField(to='annotate.Token'),
        ),
        migrations.AddField(
            model_name='mwe',
            name='components',
            field=models.ManyToManyField(to='annotate.Token'),
        ),
        migrations.AddField(
            model_name='frametype',
            name='lexUnits',
            field=models.ManyToManyField(to='annotate.LexicalUnits'),
        ),
        migrations.AddField(
            model_name='frame',
            name='mwe',
            field=models.ManyToManyField(to='annotate.MWE'),
        ),
        migrations.AddField(
            model_name='frame',
            name='sentence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='annotate.Sentence'),
        ),
        migrations.AddField(
            model_name='frame',
            name='slot_element',
            field=models.ManyToManyField(to='annotate.Slot'),
        ),
    ]
